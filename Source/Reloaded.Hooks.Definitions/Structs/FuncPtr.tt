<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>


<# 
    string[] templates = 
    { 
        "TReturn", 
        "T1, TReturn", 
        "T1, T2, TReturn", 
        "T1, T2, T3, TReturn",
        "T1, T2, T3, T4, TReturn",
        "T1, T2, T3, T4, T5, TReturn",
        "T1, T2, T3, T4, T5, T6, TReturn",
        "T1, T2, T3, T4, T5, T6, T7, TReturn",  
        "T1, T2, T3, T4, T5, T6, T7, T8, TReturn",
        "T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn",
        "T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn",
        "T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn",
        "T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn",
        "T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn",
        "T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn",
        "T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn",
    };
#>

using System;

namespace Reloaded.Hooks.Definitions.Structs
{
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
<#
			foreach (var template in templates)
			{
#>        
#if FEATURE_FUNCTION_POINTERS
    /// <summary>
    /// Wraps a CDECL compatible function pointer.
    /// </summary>
    [X64.Function(X64.CallingConventions.Microsoft)]
    [X86.Function(X86.CallingConventions.Cdecl)]
    public unsafe struct FuncPtr<<#= template #>>
    {
        /// <summary>
        /// Calls the underlying function.
        /// </summary>
        public delegate*cdecl<<#= template #>> Invoke;

        public FuncPtr(delegate*cdecl<<#= template #>> ptr) { Invoke = ptr; }
        public FuncPtr(void* ptr) { Invoke = (delegate*cdecl<<#= template #>>) ptr; }

        public static implicit operator void*(FuncPtr<<#= template #>> func) => func.Invoke;
        public static implicit operator delegate*cdecl<<#= template #>>(FuncPtr<<#= template #>> func) => func.Invoke;
        public static implicit operator FuncPtr<<#= template #>>(void* ptr) => new FuncPtr<<#= template #>>(ptr);
        public static implicit operator FuncPtr<<#= template #>>(IntPtr ptr) => new FuncPtr<<#= template #>>((void*)ptr);
        public static implicit operator FuncPtr<<#= template #>>(delegate*cdecl<<#= template #>> ptr) => new FuncPtr<<#= template #>>(ptr);
        public static implicit operator FuncPtr<<#= template #>>(delegate*<<#= template #>> ptr) => new FuncPtr<<#= template #>>(ptr);
    }
#endif
<#
            } 
#>
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member
}